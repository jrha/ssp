{"name":"SSP","tagline":"SuperSimplePlayer","body":"SSP\r\n===\r\n\r\nA wear levelling player for your music collection.\r\nLike a radio station that plays all of your music with a no repeat guarantee!\r\n\r\nFeatures\r\n--------\r\n* Only two controls.\r\n* Tracks are shuffled to equalise play count.\r\n* Skipped tracks are demoted in play order.\r\n\r\nControls\r\n--------\r\n* __ESC__ - Exit\r\n* __Space__ - Skip current track\r\n* __a__ - Toggle album mode\r\n* __p__ - Flag problem with current track and skip it\r\n\r\nRequirements\r\n------------\r\n* python-sqlalchemy\r\n* pygtk\r\n* A collection of music with musicbrainz tags (use Picard)\r\n\r\nGetting Started\r\n---------------\r\n* Run `./update_library.py` which may take a while.\r\n* Run `./player.py`.\r\n* Enjoy.\r\n\r\nAlbum Mode\r\n------------\r\nPlay randomly selected albums from start to finish, ignoring tracks that have been played or skipped this round.\r\nToggle with the `a` key at runtime and/or start the player in album mode with `--albums`.\r\n\r\nPassive Mode\r\n------------\r\nIf for some reason you don't want the player to update statistics in the library,\r\nrun with `--passive`, this is probably only useful if you are testing something.\r\nAlbum Mode will play one track forever in passive mode as it relies on track statistics.\r\n\r\nFlagging Problem Tracks\r\n-----------------------\r\nIf you come across a track which has problems (skipping audio, distortion, doesn't finish playing...)\r\npress `p` to skip it and write a message to the player log flagging the track as problematic.\r\nFind these messages later by searching for __PROBLEM__ in the log file, e.g. `grep PROBLEM ssp.log`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}